name: Deploy Docker Image to Amazon ECR

on:
  push:
    branches:
      - master

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 471112682193.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: docker build -t rkumar-registry .

      - name: Tag Docker image
        run: docker tag rkumar-registry:latest 471112682193.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rkumar-registry:latest

      - name: Push Docker image to Amazon ECR
        run: docker push 471112682193.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rkumar-registry:latest

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1

      - name: Set up AWS IAM Authenticator
        uses: prepor/action-aws-iam-authenticator@master

      - name: Configure AWS EKS
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name rkumar-cluster

      - name: Create Namespace (if not exists)
        run: kubectl apply -f rkumar-namespace.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s-deployment.yaml

      - name: Verify Deployment and Check Rollout Status
        run: |
          # Wait until the deployment is available
          MAX_TRIES=10
          SLEEP_TIME=6
          COUNT=0
          until kubectl get deployment rkumar-service || [ $COUNT -eq $MAX_TRIES ]; do
            sleep $SLEEP_TIME
            COUNT=$(($COUNT + 1))
          done
          if [ $COUNT -eq $MAX_TRIES ]; then
            echo "Deployment not found after several attempts."
            exit 1
          fi
          # Check rollout status
          kubectl rollout status deployment/rkumar-service
